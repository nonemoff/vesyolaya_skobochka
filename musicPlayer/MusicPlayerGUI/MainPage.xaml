<?xml version="1.0" encoding="utf-8" ?>
<ContentPage 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:local="clr-namespace:MusicPlayerGUI.ViewModels"
    x:Class="MusicPlayerGUI.MainPage"
    x:Name="RootPage">

    <ContentPage.Resources>
        <ResourceDictionary>
            <!-- Регистрируем конвертер для ValueChanged -->
            <local:ValueChangedEventArgsConverter x:Key="ValueChangedEventArgsConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <!-- Path entry and Load Songs -->
            <RowDefinition Height="Auto"/>
            <!-- Picker and Shuffle -->
            <RowDefinition Height="Auto"/>
            <!-- Tracks -->
            <RowDefinition Height="*"/>
            <!-- Statusbar, Control Buttons, Slider and Notification Label -->
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Path entry and Load Songs -->
        <Grid Grid.Row="0" Padding="40,10,40,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="9*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Entry Text="{Binding Path}" 
                   Placeholder="Input path to music folder" 
                   Margin="0,0,5,0"/>
            <Button Text="Load Music" 
                    Command="{Binding LoadMusicCommand}" 
                    Grid.Column="1"/>
        </Grid>

        <!-- Picker and Shuffle -->
        <Grid Grid.Row="1" Padding="40,10,40,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="9*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Picker ItemsSource="{Binding Modes}" 
                    SelectedItem="{Binding SelectedMode, Mode=TwoWay}" 
                    Margin="0,0,5,0"
                    Grid.Column="0"/>
            <Button Text="Shuffle Queue" 
                    Command="{Binding ShuffleQueueCommand}"
                    Margin="5,0,0,0" 
                    Grid.Column="1"/>
        </Grid>

        <!-- Tracks -->
        <CollectionView ItemsSource="{Binding Tracks}" Grid.Row="2">
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <Grid Padding="40" ColumnSpacing="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Отображение данных трека -->
                        <Label Grid.Column="0" Grid.Row="0" Text="{Binding TrackName}" FontAttributes="Bold"/>
                        <Label Grid.Column="0" Grid.Row="1" Text="{Binding TrackArtist}"/>
                        <Label Grid.Column="1" Grid.Row="0" Text="{Binding Duration}" 
                       VerticalOptions="Center" HorizontalOptions="Center" 
                       Grid.RowSpan="2"/>
                        <!-- Кнопка Add или Delete -->
                        <Button x:Name="ActionButton"
                        Grid.Column="2" Grid.Row="0"
                        Text="Add" 
                        Command="{Binding Source={x:Reference RootPage}, Path=BindingContext.AddTrackCommand}"
                        CommandParameter="{Binding .}"
                        VerticalOptions="Center" Grid.RowSpan="2">
                            <Button.Triggers>
                                <DataTrigger TargetType="Button" 
                                     Binding="{Binding Source={x:Reference RootPage}, Path=BindingContext.SelectedMode}" 
                                     Value="Queue">
                                    <Setter Property="Text" Value="Delete"/>
                                    <Setter Property="Command" Value="{Binding Source={x:Reference RootPage}, Path=BindingContext.DeleteTrackCommand}"/>
                                </DataTrigger>
                            </Button.Triggers>
                        </Button>
                        <!-- Подсветка текущего трека -->
                        <Grid.Triggers>
                            <DataTrigger TargetType="Grid" Binding="{Binding IsCurrent}" Value="True">
                                <Setter Property="BackgroundColor" Value="LightGreen"/>
                            </DataTrigger>
                        </Grid.Triggers>
                    </Grid>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <!-- Statusbar, Control Buttons, Slider and Notification Label -->
        <Grid Grid.Row="3" Padding="40">
            <Grid.RowDefinitions>
                <!-- Control Buttons and Track Info -->
                <RowDefinition Height="Auto"/>
                <!-- Slider -->
                <RowDefinition Height="Auto"/>
                <!-- Notification Label -->
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Control Buttons and Track Info -->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Text="{Binding CurrentTrackName}" 
                       HorizontalOptions="Start" VerticalOptions="Center" 
                       TextColor="White" FontAttributes="Bold"/>
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Text="&lt;" 
                            Command="{Binding PreviousTrackCommand}" 
                            FontAttributes="Bold" WidthRequest="50" HeightRequest="50" 
                            CornerRadius="25" HorizontalOptions="Center" VerticalOptions="Center"/>
                    <Button Grid.Column="1" Text="{Binding PlayPauseButtonText}" 
                            Command="{Binding PlayPauseCommand}" 
                            FontAttributes="Bold" WidthRequest="50" HeightRequest="50" 
                            CornerRadius="25" Margin="5" HorizontalOptions="Center" VerticalOptions="Center"/>
                    <Button Grid.Column="2" Text="&gt;" 
                            Command="{Binding NextTrackCommand}" 
                            FontAttributes="Bold" WidthRequest="50" HeightRequest="50" 
                            CornerRadius="25" HorizontalOptions="Center" VerticalOptions="Center"/>
                </Grid>
                <Label Grid.Column="2" Text="{Binding TrackTime}" 
                       HorizontalOptions="End" VerticalOptions="Center" 
                       TextColor="White"/>
            </Grid>

            <!-- Slider с привязкой команды через EventToCommandBehavior -->
            <Slider x:Name="TrackProgressSlider"
                    Minimum="0" 
                    Maximum="100" 
                    Value="{Binding TrackProgress, Mode=TwoWay}"
                    Grid.Row="1" VerticalOptions="Center">
                <Slider.Behaviors>
                    <toolkit:EventToCommandBehavior 
                        EventName="ValueChanged"
                        Command="{Binding SliderValueChangedCommand}"
                        EventArgsConverter="{StaticResource ValueChangedEventArgsConverter}" />
                </Slider.Behaviors>
            </Slider>

            <!-- Notification Label -->
            <Label Grid.Row="2" Text="{Binding NotificationMessage}" 
                   HorizontalOptions="Center" TextColor="White"/>
        </Grid>
    </Grid>
</ContentPage>
